name: 打包WEB网页

on:
 # 设置每天凌晨6点打包（北京时区+8）
  schedule: 
    - cron: '0 22 * * *'
  workflow_dispatch:
    inputs:
      repo:
        description: '请输入EasyTier源码仓库'
        required: true
        default: 'EasyTier/EasyTier'
      branch:
        description: '请输入仓库的分支或版本号，默认main分支'
        required: true
        default: 'main'
      scp:
        description: '上传静态网页文件到服务器'
        required: true
        default: false
        type: boolean
env:
  branch: ${{ github.event.inputs.branch || 'main' }} # 为 branch 设置默认值
  repo: ${{ github.event.inputs.repo || 'EasyTier/EasyTier' }} # 为 repo 设置默认值
  CARGO_TERM_COLOR: always
  TZ: Asia/Shanghai
  
#设置仓库权限
permissions:
  contents: read
  pages: write
  id-token: write

#只允许一个并发部署，跳过在正在进行的部署和最新排队的部署之间排队的任务。
#但是，不要取消正在进行的部署，因为我们希望这些生产环境的部署完成。
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 只执行单个部署任务，因为我们只是进行部署。
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      - name: 删除工作流
        uses: GitRML/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          retain_days: 3 # 保留最近3天的工作流运行记录
      - name: 克隆源码
        run: git clone -b ${{ env.branch }} https://github.com/${{ env.repo }} /opt/et
      - name: 设置Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21' # 使用的 Node.js 版本，可调整
      - name: 安装pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false
      - name: 构建 HTML
        run: |
          cd /opt/et
          sed -i 's|^// import { viteSingleFile }|import { viteSingleFile }|' easytier-web/frontend/vite.config.ts
          sed -i 's|vue(),/\* viteSingleFile() \*/|vue(), viteSingleFile()|' easytier-web/frontend/vite.config.ts
          sed -i 's|<script src="/api_meta.js"></script>|<script>window.apiMeta = { api_host: "https://config-server.easytier.cn" };</script>|' easytier-web/frontend/index.html
          sed -i 's|\${location.origin}\${location.pathname}|https://config-server.easytier.cn|g' easytier-web/frontend/src/modules/api-host.ts

          sed -i "s/'Register' : 'Login'/'注册' : '登录'/g" easytier-web/frontend/src/components/Login.vue
          sed -i 's/Login Failed/登录失败/g' easytier-web/frontend/src/components/Login.vue
          sed -i 's/Register Success/注册成功/g' easytier-web/frontend/src/components/Login.vue
          sed -i 's/Register Failed/注册失败/g' easytier-web/frontend/src/components/Login.vue
          sed -i 's/>Username</>用户名</g' easytier-web/frontend/src/components/Login.vue
          sed -i 's/>Password</>密码</g' easytier-web/frontend/src/components/Login.vue
          sed -i 's/>Captcha</>验证码</g' easytier-web/frontend/src/components/Login.vue
          sed -i 's/alt="Captcha"/alt="验证码"/g' easytier-web/frontend/src/components/Login.vue
          sed -i 's/label="Login"/label="登录"/g' easytier-web/frontend/src/components/Login.vue
          sed -i 's/label="Register"/label="注册"/g' easytier-web/frontend/src/components/Login.vue
          sed -i 's/label="Back to Login"/label="返回登录"/g' easytier-web/frontend/src/components/Login.vue

          sed -i 's/Change Password/修改密码/g' easytier-web/frontend/src/components/Login.vue
          sed -i 's/Logout/退出/g' easytier-web/frontend/src/components/Login.vue
          sed -i 's/>DashBoard</>仪表盘</g' easytier-web/frontend/src/components/Login.vue
          sed -i 's/>Devices</>设备</g' easytier-web/frontend/src/components/Login.vue
          sed -i 's/>Login Page</>登录页面</g' easytier-web/frontend/src/components/Login.vue
          
          sed -i 's/>Device List</>设备列表</g' easytier-web/frontend/src/components/DeviceList.vue
          sed -i 's/>header="Hostname"/header="主机名"/g' easytier-web/frontend/src/components/DeviceList.vue
          sed -i 's/header="Public IP"/header="公网IP"/g' easytier-web/frontend/src/components/DeviceList.vue
          sed -i 's/header="Running Network Count"/header="运行中网络数量"/g' easytier-web/frontend/src/components/DeviceList.vue
          sed -i 's/header="Report Time"/header="上报时间"/g' easytier-web/frontend/src/components/DeviceList.vue
          sed -i 's/header="EasyTier Version"/header="EasyTier版本"/g' easytier-web/frontend/src/components/DeviceList.vue

          
          
          pnpm -r install
          pnpm -r build
      - name: 上传到文件服务器
        if: github.repository_owner == 'lmq8267' && github.event.inputs.scp == 'true' # 判断仓库所有者是否是 lmq8267 并启用上传了才执行
        env:
          #读取帐号密码的环境变量
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          CMD: ${{ secrets.PAGECMD }}
        run: |
          #将构建出的html文件通过scp命令复制到文件服务器里
          sudo apt-get install -y sshpass
          cp -rf /opt/et/easytier-web/frontend/dist /opt/dist
          mv /opt/dist/index.html /opt/dist/web.html
          rm -rf /opt/dist/api_meta.js || true
          sshpass -p ${{ secrets.SSH_PRIVATE_KEY }} scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r /opt/dist/* ${{ secrets.PAGECMD }}easytier/web/
      - name: 设置页面
        uses: actions/configure-pages@v5
      - name: 上传文件
        uses: actions/upload-pages-artifact@v3
        with:
          path: '/opt/et/easytier-web/frontend/dist'
      - name: 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
  keepalive-workflow:
    # github超过60天未提交将自动停止工作流
    name: 工作流保活 
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@v4
      #- uses: gautamkrishnar/keepalive-workflow@v2
        #with:
          #use_api: true
      - name: 检查上次提交日期
        id: check_commit_date
        run: |
          # 获取上次提交日期（格式：YYYY-MM-DD）
          LAST_COMMIT_DATE=$(git log -1 --format=%cd --date=short)
          echo "上次提交日期: $LAST_COMMIT_DATE"
          # 计算当前日期和上次提交日期的差值（单位：天）
          LAST_COMMIT_TIMESTAMP=$(date -d "$LAST_COMMIT_DATE" +%s)
          CURRENT_TIMESTAMP=$(date +%s)
          DIFF_DAYS=$(( (CURRENT_TIMESTAMP - LAST_COMMIT_TIMESTAMP) / 86400 ))
          echo "距离上次提交以来的天数: $DIFF_DAYS"
          echo "diff_days=$DIFF_DAYS" >> $GITHUB_ENV
      - name: 执行空提交
        if: ${{ env.diff_days > 50 }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # 创建空提交
          git commit --allow-empty -m "自动空提交，保持仓库活跃"
          git push
