name: 打包docker镜像

on:
  workflow_dispatch:
    inputs:
      tag:
        description: '请填写打包镜像的版本号，在github-Releases页面查看已发布的版本号'
        required: true
        default: ''
      latest:
        description: '是否打包成最新latest镜像'
        required: true
        default: true
        type: boolean
      rel:
        description: '是否发布离线镜像包'
        required: true
        default: true
        type: boolean

env:
  tags: "${{ github.event.inputs.tag }}"
  
jobs:
 build:
    runs-on: ubuntu-latest
    steps:
      - name: 下载程序
        run: |
          cd /opt
          
          curl -o /opt/easytier.tar.gz -L https://github.com/lmq8267/EasyTier/releases/download/$tags/easytier-aarch64-linux-musl.tar.gz
          tar -xzvf /opt/easytier.tar.gz -C /opt/
          rm -rf easytier.tar.gz
          mv -f easytier-core easytier-core_arm64
          mv -f easytier-cli easytier-cli_arm64

          curl -o /opt/easytier.tar.gz -L https://github.com/lmq8267/EasyTier/releases/download/$tags/easytier-x86_64-linux-musl.tar.gz
          tar -xzvf /opt/easytier.tar.gz -C /opt/
          rm -rf easytier.tar.gz
          mv -f easytier-core easytier-core_amd64
          mv -f easytier-cli easytier-cli_amd64

          curl -o /opt/easytier.tar.gz -L https://github.com/lmq8267/EasyTier/releases/download/$tags/easytier-i686-linux-musl.tar.gz
          tar -xzvf /opt/easytier.tar.gz -C /opt/
          rm -rf easytier.tar.gz
          mv -f easytier-core easytier-core_386
          mv -f easytier-cli easytier-cli_386

          curl -o /opt/easytier.tar.gz -L https://github.com/lmq8267/EasyTier/releases/download/$tags/easytier-armv7-linux-musleabi.tar.gz
          tar -xzvf /opt/easytier.tar.gz -C /opt/
          rm -rf easytier.tar.gz
          mv -f easytier-core easytier-core_armv7
          mv -f easytier-cli easytier-cli_armv7

          curl -o /opt/easytier.tar.gz -L https://github.com/lmq8267/EasyTier/releases/download/$tags/easytier-arm-linux-musleabi.tar.gz
          tar -xzvf /opt/easytier.tar.gz -C /opt/
          rm -rf easytier.tar.gz
          mv -f easytier-core easytier-core_armv6
          mv -f easytier-cli easytier-cli_armv6

          echo "FROM alpine:latest" > ./Dockerfile
          echo "ARG TARGETARCH" >> ./Dockerfile
          echo "ARG TARGETVARIANT" >> ./Dockerfile
          echo "ADD easytier-core_\$TARGETARCH\$TARGETVARIANT /usr/bin/easytier-core" >> ./Dockerfile
          echo "ADD easytier-cli_\$TARGETARCH\$TARGETVARIANT /usr/bin/easytier-cli" >> ./Dockerfile 
          echo "RUN chmod +x /usr/bin/easytier-core" >> ./Dockerfile
          echo "RUN chmod +x /usr/bin/easytier-cli" >> ./Dockerfile
          echo "ENTRYPOINT [\"/usr/bin/easytier-core\"]" >> ./Dockerfile
          
      - name: Setup QEMU
        uses: dbhi/qus/action@main
      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
         username: lmq8267
         password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and Push Docker Latest Image
        if: github.event.inputs.latest == 'true'
        uses: docker/build-push-action@v5
        with:
         push: true
         tags: |
          lmq8267/easytier:${{ env.tags }}
          lmq8267/easytier:latest
         platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6
         context: /opt
      - name: Build and Push Docker Image
        if: github.event.inputs.latest == 'false'
        uses: docker/build-push-action@v5
        with:
         push: true
         tags: |
          lmq8267/easytier:${{ env.tags }}
         platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6
         context: /opt
      - name: Save Docker Image
        if: github.event.inputs.rel == 'true'
        run: |
          mkdir -p /opt/dk
          docker pull --platform linux/amd64 lmq8267/easytier:${{ env.tags }}
          docker save -o /opt/dk/easytier-amd64-docker.tar lmq8267/easytier:${{ env.tags }}

          docker pull --platform linux/386 lmq8267/easytier:${{ env.tags }}
          docker save -o /opt/dk/easytier-386-docker.tar lmq8267/easytier:${{ env.tags }}

          docker pull --platform linux/arm64 lmq8267/easytier:${{ env.tags }}
          docker save -o /opt/dk/easytier-arm64-docker.tar lmq8267/easytier:${{ env.tags }}

          docker pull --platform linux/arm/v7 lmq8267/easytier:${{ env.tags }}
          docker save -o /opt/dk/easytier-armv7-docker.tar lmq8267/easytier:${{ env.tags }}

          docker pull --platform linux/arm/v6 lmq8267/easytier:${{ env.tags }}
          docker save -o /opt/dk/easytier-armv5-docker.tar lmq8267/easytier:${{ env.tags }}
          echo "build_time=$(TZ=UTC-8 date +%Y-%m-%d' '%H:%M:%S)" >> $GITHUB_ENV
      - name: release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.c8 }}
          body: |
           > ### 编译时间 ：${{ env.build_time }}
           
           其中 arm armv7 
           -musleabi：只支持软件浮点的设备
           -musleabihf：支持硬件浮点的设备
           -docker.tar  docker离线镜像包
           
           [官方更新说明](https://github.com/EasyTier/EasyTier/releases)
           
          tag_name: ${{ env.tags }}
          files: /opt/dk/*
          
